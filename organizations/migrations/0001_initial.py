# Generated by Django 4.2.10 on 2025-08-25 20:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import organizations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InitiativeFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('region', models.CharField(choices=[('Addis Ababa', 'Addis Ababa'), ('Diredawa', 'Diredawa'), ('Afar', 'Afar'), ('Amhara', 'Amhara'), ('Benishangul-Gumuz', 'Benishangul-Gumuz'), ('Central Ethiopia', 'Central Ethiopia'), ('Gambela', 'Gambela'), ('Harari', 'Harari'), ('Oromia', 'Oromia'), ('Sidama', 'Sidama'), ('Somali', 'Somali'), ('South Ethiopia', 'South Ethiopia'), ('Southwest', 'Southwest'), ('Tigray', 'Tigray')], max_length=255)),
                ('is_hardship_area', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MainActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('baseline', models.CharField(blank=True, default='', max_length=255)),
                ('target_type', models.CharField(choices=[('cumulative', 'Cumulative'), ('increasing', 'Increasing'), ('decreasing', 'Decreasing'), ('constant', 'Constant')], default='cumulative', max_length=65)),
                ('q1_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q1 Target (Jul-Sep)')),
                ('q2_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q2 Target (Oct-Dec)')),
                ('q3_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q3 Target (Jan-Mar)')),
                ('q4_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q4 Target (Apr-Jun)')),
                ('annual_target', models.DecimalField(decimal_places=2, default=0, max_digits=65)),
                ('selected_months', models.JSONField(blank=True, null=True)),
                ('selected_quarters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('MINISTER', 'Minister'), ('STATE_MINISTER', 'State Minister'), ('CHIEF_EXECUTIVE', 'Chief Executive'), ('LEAD_EXECUTIVE', 'Lead Executive'), ('EXECUTIVE', 'Executive'), ('TEAM_LEAD', 'Team Lead'), ('DESK', 'Desk')], max_length=20)),
                ('vision', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('core_values', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='organizations.organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('PLANNER', 'Planner'), ('EVALUATOR', 'Evaluator')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='organizations.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(choices=[('FLASH_DISK', 'Flash Disk'), ('STATIONARY', 'Stationary'), ('ALL', 'All')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planner_name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('LEO/EO Plan', 'LEO/EO Plan'), ('Desk/Team Plan', 'Desk/Team Plan'), ('Individual Plan ', 'Individual Plan ')], max_length=20)),
                ('executive_name', models.CharField(blank=True, max_length=255, null=True)),
                ('selected_objectives_weights', models.JSONField(blank=True, help_text='Custom weights assigned by planner for each selected objective {objective_id: weight}', null=True)),
                ('fiscal_year', models.CharField(max_length=10)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='organizations.organization')),
            ],
        ),
        migrations.CreateModel(
            name='PrintingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('MANUAL', 'Manual/Guidelines'), ('BOOKLET', 'Booklet'), ('LEAFLET', 'Leaflet'), ('BROCHURE', 'Brochure')], max_length=20)),
                ('price_per_page', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=True, help_text='Whether this program is a default one created by admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SessionCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(choices=[('FLIP_CHART', 'Flip Chart'), ('MARKER', 'Marker'), ('TONER_PAPER', 'Toner and Paper'), ('ALL', 'All')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StrategicObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[organizations.models.validate_positive_weight, organizations.models.validate_max_weight])),
                ('is_default', models.BooleanField(default=True, help_text='Whether this objective is a default one created by admin')),
                ('planner_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Custom weight assigned by planner (overrides default weight)', max_digits=5, null=True, validators=[organizations.models.validate_positive_weight, organizations.models.validate_max_weight])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupervisorCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(choices=[('MOBILE_CARD_300', 'Mobile Card (300 birr)'), ('MOBILE_CARD_500', 'Mobile Card (500 birr)'), ('STATIONARY', 'Stationary (Writing Pad and Pen)'), ('ALL', 'All')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('activity_type', models.CharField(choices=[('Training', 'Training'), ('Meeting', 'Meeting'), ('Workshop', 'Workshop'), ('Printing', 'Printing'), ('Supervision', 'Supervision'), ('Procurement', 'Procurement'), ('Other', 'Other')], default='Other', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('budget_calculation_type', models.CharField(choices=[('WITH_TOOL', 'With Tool'), ('WITHOUT_TOOL', 'Without Tool')], default='WITHOUT_TOOL', max_length=20)),
                ('estimated_cost_with_tool', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('estimated_cost_without_tool', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('government_treasury', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('sdg_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('partners_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('other_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('training_details', models.JSONField(blank=True, null=True)),
                ('meeting_workshop_details', models.JSONField(blank=True, null=True)),
                ('procurement_details', models.JSONField(blank=True, null=True)),
                ('printing_details', models.JSONField(blank=True, null=True)),
                ('supervision_details', models.JSONField(blank=True, null=True)),
                ('partners_details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('main_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_activities', to='organizations.mainactivity')),
            ],
            options={
                'verbose_name': 'Sub Activity',
                'verbose_name_plural': 'Sub Activities',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategicInitiative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_default', models.BooleanField(default=True, help_text='Whether this initiative is a default one created by admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative_feed', models.ForeignKey(blank=True, help_text='The predefined initiative this was created from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strategic_initiatives', to='organizations.initiativefeed')),
                ('organization', models.ForeignKey(blank=True, help_text='The organization that created this initiative (only for custom initiatives)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiatives', to='organizations.organization')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiatives', to='organizations.program')),
                ('strategic_objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiatives', to='organizations.strategicobjective')),
            ],
        ),
        migrations.AddField(
            model_name='program',
            name='strategic_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='organizations.strategicobjective'),
        ),
        migrations.CreateModel(
            name='ProcurementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('OFFICE_SUPPLIES', 'Office Supplies'), ('COMPUTER_EQUIPMENT', 'Computer Equipment'), ('FURNITURE', 'Furniture'), ('CLEANING_SUPPLIES', 'Cleaning Supplies'), ('COMMUNICATION', 'Communication'), ('STATIONERY', 'Stationery'), ('ELECTRONICS', 'Electronics'), ('MEDICAL_SUPPLIES', 'Medical Supplies'), ('TRANSPORTATION', 'Transportation'), ('OTHER', 'Other')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('unit', models.CharField(choices=[('PIECE', 'Piece'), ('BOX', 'Box'), ('PACK', 'Pack'), ('SET', 'Set'), ('UNIT', 'Unit'), ('DOZEN', 'Dozen'), ('KILOGRAM', 'Kilogram'), ('METER', 'Meter'), ('LITER', 'Liter'), ('EACH', 'Each')], max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'name'],
                'unique_together': {('category', 'name', 'unit')},
            },
        ),
        migrations.CreateModel(
            name='PlanReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], max_length=20)),
                ('feedback', models.TextField()),
                ('reviewed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='organizations.organizationuser')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='organizations.plan')),
            ],
        ),
        migrations.AddField(
            model_name='plan',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='organizations.program'),
        ),
        migrations.AddField(
            model_name='plan',
            name='selected_objectives',
            field=models.ManyToManyField(blank=True, help_text='All objectives selected for this plan', related_name='selected_in_plans', to='organizations.strategicobjective'),
        ),
        migrations.AddField(
            model_name='plan',
            name='strategic_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='organizations.strategicobjective'),
        ),
        migrations.CreateModel(
            name='PerformanceMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('baseline', models.CharField(blank=True, default='', max_length=255)),
                ('target_type', models.CharField(choices=[('cumulative', 'Cumulative'), ('increasing', 'Increasing'), ('decreasing', 'Decreasing'), ('constant', 'Constant')], default='cumulative', max_length=20)),
                ('q1_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q1 Target (Jul-Sep)')),
                ('q2_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q2 Target (Oct-Dec)')),
                ('q3_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q3 Target (Jan-Mar)')),
                ('q4_target', models.DecimalField(decimal_places=2, default=0, max_digits=65, verbose_name='Q4 Target (Apr-Jun)')),
                ('annual_target', models.DecimalField(decimal_places=2, default=0, max_digits=65)),
                ('selected_months', models.JSONField(blank=True, null=True)),
                ('selected_quarters', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_measures', to='organizations.strategicinitiative')),
                ('organization', models.ForeignKey(blank=True, help_text='The organization that created this performance measure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_measures', to='organizations.organization')),
            ],
        ),
        migrations.CreateModel(
            name='PerDiem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hardship_allowance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='per_diems', to='organizations.location')),
            ],
        ),
        migrations.AddField(
            model_name='mainactivity',
            name='initiative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_activities', to='organizations.strategicinitiative'),
        ),
        migrations.AddField(
            model_name='mainactivity',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='The organization that created this activity', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_activities', to='organizations.organization'),
        ),
        migrations.CreateModel(
            name='LandTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_type', models.CharField(choices=[('SINGLE', 'Single Trip'), ('ROUND', 'Round Trip')], default='SINGLE', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_transport_destinations', to='organizations.location')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_transport_origins', to='organizations.location')),
            ],
        ),
        migrations.AddField(
            model_name='initiativefeed',
            name='strategic_objective',
            field=models.ForeignKey(blank=True, help_text='The strategic objective this initiative feed belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiative_feeds', to='organizations.strategicobjective'),
        ),
        migrations.CreateModel(
            name='AirTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='air_transport_destinations', to='organizations.location')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='air_transport_origins', to='organizations.location')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityCostingAssumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('Training', 'Training'), ('Meeting', 'Meeting'), ('Workshop', 'Workshop'), ('Printing', 'Printing'), ('Supervision', 'Supervision'), ('Procurement', 'Procurement'), ('Other', 'Other')], max_length=20)),
                ('location', models.CharField(choices=[('Addis_Ababa', 'Addis Ababa'), ('Adama', 'Adama'), ('Bahirdar', 'Bahirdar'), ('Mekele', 'Mekele'), ('Hawassa', 'Hawassa'), ('Gambella', 'Gambella'), ('Afar', 'Afar'), ('Somali', 'Somali')], max_length=20)),
                ('cost_type', models.CharField(choices=[('per_diem', 'Per Diem'), ('accommodation', 'Accommodation'), ('venue', 'Venue'), ('transport_land', 'Land Transport'), ('transport_air', 'Air Transport'), ('participant_flash_disk', 'Flash Disk (per participant)'), ('participant_stationary', 'Stationary (per participant)'), ('session_flip_chart', 'Flip Chart (per session)'), ('session_marker', 'Marker (per session)'), ('session_toner_paper', 'Toner and Paper (per session)')], max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('activity_type', 'location', 'cost_type')},
            },
        ),
        migrations.CreateModel(
            name='ActivityBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_activity_id', models.CharField(blank=True, help_text='Reference to sub-activity ID for tracking purposes only', max_length=50, null=True)),
                ('budget_calculation_type', models.CharField(choices=[('WITH_TOOL', 'With Tool'), ('WITHOUT_TOOL', 'Without Tool')], default='WITHOUT_TOOL', max_length=20)),
                ('activity_type', models.CharField(blank=True, choices=[('Training', 'Training'), ('Meeting', 'Meeting'), ('Workshop', 'Workshop'), ('Printing', 'Printing'), ('Supervision', 'Supervision'), ('Procurement', 'Procurement'), ('Other', 'Other')], max_length=20, null=True)),
                ('estimated_cost_with_tool', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('estimated_cost_without_tool', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('government_treasury', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('sdg_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('partners_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('other_funding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('training_details', models.JSONField(blank=True, null=True)),
                ('meeting_workshop_details', models.JSONField(blank=True, null=True)),
                ('procurement_details', models.JSONField(blank=True, null=True)),
                ('printing_details', models.JSONField(blank=True, null=True)),
                ('supervision_details', models.JSONField(blank=True, null=True)),
                ('partners_details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legacy_budgets', to='organizations.mainactivity')),
            ],
        ),
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('LUNCH', 'Lunch'), ('HALL_REFRESHMENT', 'Hall with Refreshment'), ('DINNER', 'Dinner'), ('BED', 'Bed'), ('FULL_BOARD', 'Full Board')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodations', to='organizations.location')),
            ],
        ),
        migrations.AddIndex(
            model_name='strategicinitiative',
            index=models.Index(fields=['program'], name='idx_initiative_program'),
        ),
        migrations.AddIndex(
            model_name='strategicinitiative',
            index=models.Index(fields=['organization'], name='idx_initiative_organization'),
        ),
        migrations.AddConstraint(
            model_name='strategicinitiative',
            constraint=models.CheckConstraint(check=models.Q(models.Q(models.Q(('program__isnull', True), ('strategic_objective__isnull', False)), models.Q(('program__isnull', False), ('strategic_objective__isnull', True)), _connector='OR')), name='initiative_relation_check'),
        ),
        migrations.AlterUniqueTogether(
            name='organizationuser',
            unique_together={('user', 'organization', 'role')},
        ),
    ]
